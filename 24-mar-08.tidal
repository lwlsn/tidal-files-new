setcps(157/120/2)

do
  --resetCycles
  let notePattern1 = "{[gs6 ~] ~  as5  [gs6 ~] ~  as5 <[gs6 as6] [as5 c5]> <~ [as5 gs5]> }%8"
      notePattern2 = "{[gs6 g6] [f6 ds6]  as5  [gs6 g6] [f6 ds6]  as5 <[gs6 as6] [as5 c5]> <[gs6 g6] [as5 gs5]> }%8"
      mx = [1, 1]
  d1 $ note "{f4 [~  [cs5]] cs5 ~  gs4 [~ ds4] ds4 ~}%2" # s "GBass:2"
    # speed "[1, 1.02]"
    # legato 0.5
    # room 0.4 # size 0.2
    # distort 0.25
    |* gain (mx!!0)
  d2 $ note (-- slow 2 $ off 0.25 (+12) $ off 0.125 (+"7") $
        notePattern1) # s "hjdsynth:12"
    # legato 0.8
    |+ note "-12"
    # speed "[1, 1.02]"
    # room 0.4 # size 0.2
    # coarse 5    |* gain (mx!!1)

d3 $ s "{sfe-kd*4 sfe-kd:6*8}/2"
# shape 0.2 # room 0.4 # size 0.2
# distort 0.2


d5
  -- $ whenmod 24 20 (const $ silence)
  $ whenmod 7 4 (chop 4)
  $ almostNever ( # squiz "1 2")
  $ someCyclesBy 0.05 (spreadf [chop 8, rev, (#crush " 4  5 6")])
  $ stack [
    loopAt "{4!7 [4 8 1 2]}%1" $ splice 32 "0..31" $ s "svlng:2" # speed "[1, 1.02]"
     ,  loopAt "{4!7 [8 16]}%1" $ splice 32 "0..31" $ s "lbreak:2" # gain 1.1
    ]
    |* gain 1.05 |* speed "[1, 1.02]"
    -- # nudge 0.2


hush




--- hellooo again


setcps(170/120/2)

do
    d1 $ note "c5*2" # s "hjdsynth:1" # legato 1 # nudge (0.2)
    d2 $ note "c5*2" # s "midi3"


do
    let notePat1 = "{a5 ~ ~ ~ ~ [a5 <g5 c6>] a5 as5 }%8"
        notePat2 = "{a5*2 a5*2 a5 a5 a5 [a5 <g5 c6>] a5 as5 }%8"
        mx = [1,1,1,0]
    d1
      $ whenmod 24 12 (|+ note "12")
      $ stack[
          rarely (off 0.125 (+| note "7 12"))  $
          note (notePat2) # s "[hjdsynth:19]"
            # legato 1.2 # speed "[1, 1.02]" # distort  "0.1 0.2 0.3" #room 0.3 # size 0.2
          -- note (slow 1 $ notePat2) # s "midi3"
        ]
        |* gain (mx!!0)
    d2
      $ rarely (off 0.125 (|+ note "12"))
      $ note "<a4 c5 f4 e4>" # s "midi2"  |* gain (mx!!1)
    d3
      $ almostNever ( # squiz "1 2")
      $ someCyclesBy 0.2 (spreadf [chop 8, rev, (#crush " 4  5 6")])
      $ stack [
          s "sfe-kd:1(3,8,<0 0 1 2>)" # distort 0.15,
          s "~ sfe-cp" # fshift (range 0 50 $ slow 8 $ sine),
          fast 4 $ s "<sfe-h>*<[4 2 4 4] 2 [1 2 2 4] 1>" # n (irand 8) # gain 0.7,
          s "detritus*16?" # n (irand 32) # speed "[1, 1.02]" # legato 1.4
          ]   # nudge 0.2 |* gain (mx!!2)
    d4 $ rarely (off 0.125 (|+ note "12"))
          $ note "<a4 c5 f4 e4>" # s "midi1"  |* gain (mx!!3)






do
    let notePat1 = "{a5 ~ ~ ~ ~ [a5 <g5 c6>] a5 as5 }%8"
        notePat2 = "{a5*2 a5*2 a5 a5 a5 [a5 <g5 c6>] a5 as5 }%8"
        mx = [1,1,1]
    d1
      $ whenmod 24 12 (|+ note "12")
      $ stack[
          rarely (off 0.125 (+| note "7 12")) $
          -- note (notePat2) # s "[hjdsynth:19]"
            -- # legato 1.2 # speed "[1, 1.02]" # distort  "0.1 0.2 0.3" #room 0.3 # size 0.2
          note (slow 1 $ notePat2) # s "midi3" # nudge 0.13
        ]  |* gain (mx!!0)
    d2
      $ rarely (off 0.125 (|+ note "12"))
      $ note "<a4 c5 f4 e4>" # s "midi2"  # nudge 0.13 |* gain (mx!!1)
    d3
      $ almostNever ( # squiz "1 2")
      $ someCyclesBy 0.2 (spreadf [chop 8, rev, (#crush " 4  5 6")])
      $ stack [
          -- s "sfe-kd:0(3,8,<0 0 1 2>)" # distort 0.12,
          -- s "~ sfe-cp",
          fast 4 $ s "<sfe-h>*<[4 2 4 4] 2 [1 2 2 4] 1>" # n (irand 8) # gain 0.7,
          s "revkit*16?" # n (irand 32) # speed "[1, 1.02]"
          ]  |* gain (mx!!2)



hush
