setcps(139/120/2)

isPrime 139

isPrime n
    | n <= 1 = False
    | otherwise = not $ any (\x -> n `mod` x == 0) [2..sqrtN]
    where sqrtN = floor (sqrt ( sfromIntegral n))



d3
    $ spreadf [ply "<4 8 9>", chop 4, rev, (#crush " 4  5 6")]
    $ spin 4
    $ splice 16 "0 2 8*8 2 3 ~ 21"
    $ sound "numbers" # n (irand 8)
    # speed "[2, 2.02]"
    # gain 1.2



do
    -- resetCycles
    d3
      $ spreadf [ply "<4 8 9>", chop 4, rev, (#crush " 4  5 6")]
      $ spin 2 $ bite 8 "0 <4 3 12 4 7>"
      $ loopAt "<16 32>"
      $ splice 128 "0..127"
      $ s "mels:5"
      # gain 1.6
      # speed "[1, 1.02]"

do
    let mx = [1, 0]
        kickPat = "{1 1 ~ 1 [~ 1] 1  ~ 1  }%8"
    d4
        $ whenmod 24 20 (const $ silence)
        -- $ sometimes (slow "2 5")
        -- $ whenmod 7 4 (chop 4)
        $ almostNever (chop 32 . spin 2)
        -- $ rarely (chunk 2 (hurry 2))
        $ stack [
            s "~ sn ~ < cp cp:1*4>",
            loopAt "4" $ splice 32 "0..31" $ s "lbreak:3",
            slow 8 $ s "svpc" # n (irand 8),
            rarely (iter 4 ) $
            gain (kickPat) # s "k"
        ]
         # gain (mx!!0*1.1)

hush
