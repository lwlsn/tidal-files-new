setcps(167/120/2)

isPrime 137

isPrime n
    | n <= 1 = False
    | otherwise = not $ any (\x -> n `mod` x == 0) [2..sqrtN]
    where sqrtN = floor (sqrt (fromIntegral n))

d3
$ every 8 (#crush 3)
$ almostNever (chop 32 . spin 2)
$ someCyclesBy 0.05 (chunk 2 (density 4))
$ loopAt "4" $ splice 32 "0..31"
$ s "donks"


let kick a b c d = struct a $ stack [
                          s "k" #n (choose [1,3]) #Â legato b # shape c  #gain d
                        ]

let pat = binaryN 16 "<1034124 123124>" -- binaryN 16 "<1034124 123124>"
in
d2 $ stack [
  slow "2 4" $ kick pat 2 (range 0.35 0.69 $ rand) (range 0.95 1 $ rand)
]





setcps(137/120/2)


xfadeIn 1 8
$ qtrigger
$ someCyclesBy 0.07 (chop "<8 8 16 32>" . spin 2)
$ someCyclesBy 0.05 (chunk 2 (density 4))
$ loopAt "32"
$ splice 128 "0..127"
$ s "abstract"
# speed "[1,1.02]"


xfadeIn 2 8
$ qtrigger
$ someCyclesBy 0.07 (chop "<8 8 16 32>" . spin 2)
$ someCyclesBy 0.05 (chunk 2 (density 4))
$ loopAt "16"
$ splice 128 "0..127"
$ s "mels:0"


let   kickPat = "{1 1 ~ 1 [~ 1] 1  ~ 1  }%8"

d1
$
