setcps(151/120/2)

xfadeIn 2 8
    $ loopAt 8
    $ chop 32 $ spin 4
    -- $ splice 32 "0..31"
    $ chew 16 "0 2 3*8 2 3 ~ 1"
    $ s "wdws"
    # speed "[1,1.02]" # legato 2



d3
$ spin 4
$ splice 16 "0 2 8*8 2 3 ~ 21"
$ sound "numbers" # n (irand 8)
# speed "[2, 2.02]"
# gain 0.9

d1
$ rarely (#accelerate "0.2 0.1")
$ palindrome
$ s "numbers:0 numbers:1 numbers:2 numbers:3"
# gain 0.9

do
    let mx = [1]
        --kickPat = "{1 1 ~ 1 [~ 1] 1  ~ 1  }%8"
        kickPat = "1 1 1*2 1 1 1*2 [~ 1] 1"
    d4
        $ whenmod 24 20 (const $ silence)
        $ stack [
            rarely (iter 4 ) $ gain (kickPat) # s "k" # shape 0.85 # gain 0.62,
            s "~ ~ ~ < cp:1 cp:1*4>" # shape 0.5,
            loopAt "2!6 1 1" $ splice 32 "0..31" $ s "break127",
            slow 8 $ s "svpc" # n (irand 16)
        ]
         # gain (mx!!0*0.85)

all $ (chop 16).((#djf "0.8"))

all $ (#coarse "<2 4 8 >")

all $ id

d4 silence

xfadeIn 4 8
$ loopAt 1
$ s "<dr amencutup>*16?"
# n (irand 8)
# gain 1.1
# speed "[1, 1.02]"


do
    once $ s "svpc" # n (irand 16) # speed "[1, 1.02]"
    d4
        $ rarely (spreadf [ply 2, (#accelerate "-0.2 0.1")])
        $ spread ($) [(slow 1), (iter 4), (slow 1), (slow 1)]
        $ stack [
            --s " ~ lsn ~ <lcp lcp*4>" # legato (range 0.5 0.9 $ slow 8 $ sine) #gain 0.8,
            -- loopAt 4 $ splice 32 "0..31" $ sound "lbreak:2"  #speed "1" #gain 1.05,
            -- # n "[6(3,8,<0 4>)]?" # s "[db, 808bd:5]" |*| gain 1.3 # orbit 0 # krush 3,
           sound "[k(<3 5>,8,<0 1 2 >)]"
            # shape 0.69 # gain 0.95 # speed 0.7
            ]
            |* gain (1.02)


d4 $(#) (fast "  2 4 " $ vowel " a e o") $ sound " [bd:2 bd:2] [ 808sd:2 ~ ~ 808sd:1] [~ 808sd:3 bd:2 ~] [sn] "

d5 $ sound "wobble [dr55:3 wobble] [~ dr55:3] [dr55:3]")

d3 $(#) (speed $ fast (rev "0.5  1 ") $ fast "0.5  0.25 " "0.5 1 2 0.5") $ chop (rev $ fast (rev "0.5  1 ") $ fast 2 "1 2") $ (#) (slow 2 $ vowel "i") $ rev $ sound "{[~ bass2:4] ~, ~ [bass2:1*2] ~ ~ }"

d2 silence


d2 silence

setcps(151/120/2)

xfadeIn 2 8 $ loopAt 8 $ splice 32 "0..31" $ s "edits:9"
#speed "[1, 1.02"

d3
$ spin 4
$ splice 16 "0 2 8*8 2 3 ~ 21"
$ sound "numbers" # n (irand 8)
# speed "[2, 2.02]"
# gain 0.9


d1
$ rarely (#accelerate "0.2 0.1")
$ palindrome
$ s "<numbers:0 <alphabet:0>>" # speed "[2, 2.02]"
# gain 0.9




do
    once $ s "svpc" # n (irand 16) # speed "[1, 1.02]"
    d4
        $ rarely (spreadf [ply 2, (#accelerate "-0.2 0.1")])
        $ spread ($) [(slow 1), (iter 4), (slow 1), (slow 1)]
        $ stack [
            s " ~ lsn ~ <lcp lcp*4>" # legato (range 0.5 0.9 $ slow 8 $ sine) #gain 0.8,
            loopAt 4 $ splice 32 "0..31" $ sound "lbreak:2"  #speed "1" #gain 1.05,
            fast " 0.25 1 " $ sound "[k(<3 5>,8,<0 1 2 >)]" # shape 0.4 # speed 0.8 # gain 0.8,
            n "[6(3,8,<0 4>)]?" # s "[db, 808bd:5]" |*| gain 1.3 # orbit 0 # krush 3
            # shape 0.69 # gain 0.95 # speed 0.7
            ]
            |* gain (0.9)




d4
$ (spin 2. (# djf (range 0.25 0.75 $ slow 8 $ sine)))
$ s "numbers!4" # n (run 3)
# speed "[0.5, 0.52]"
# gain 0.9


xfadeIn 2 8 $ loopAt 32 $ splice 64 "0..63" $ s "edits:9"
#speed "[1, 1.02]"

hush


hush


tempoFunc :: Num a => a -> a -> a -> a -> a -> a
tempoFunc v a t0 t1 t2 = t0 + (t1*a) + (t2*v)

tempoFunc (-1) (-1) 150 30 15


setcps (120/60/4)
