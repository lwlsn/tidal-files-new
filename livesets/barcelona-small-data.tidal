setcps(153/120/2)

-- midi checkk

d1 $ note "c5*2" # s "midi1" #nudge (0.55)

d2 $ s "k*2"


⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢴⣤⣄⠀⠀⠀⠀⠀⢀⣤⣶⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀
⢴⣾⣿⣿⣿⣏⣉⣉⣉⣛⣛⣻⣿⣶⣦⣤⣀⠀⠀⠀⠀⠀⠀⠙⢷⠀⠀⠀⢠⡟⠀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣾⣿⣛⣛⣋⣉⣉⣉⣿⣿⣿⣿⣶⠄
⠀⠙⢿⣿⣿⣿⡁⠀⠀⣉⡿⠋⠉⠉⠙⠛⠻⢿⣦⣄⠀⠀⠀⠀⠘⣇⠀⢀⡟⠀⠀⠀⠀⢀⣤⣾⠿⠛⠋⠉⠉⠉⠻⣏⡉⠀⠈⣹⣿⣿⣿⠟⠁⠀
⠀⠀⠀⠙⣿⣿⣟⠉⠉⣙⡇⠀⠀⠀⠀⠀⠀⠀⠈⠛⢿⣦⡀⠀⠀⢹⠀⣸⠃⠀⠀⣠⣾⠟⠋⠀⠀⠀⠀⠀⠀⠀⢀⣿⡉⠉⠹⣿⣿⡟⠉⠀⠀⠀
⠀⠀⠀⠀⠈⢿⣿⣟⠉⢉⣿⣦⣄⣀⣀⠀⠀⠀⠀⠀⠀⠙⢿⣦⡀⠸⡇⡿⠀⣠⣾⠟⠁⠀⠀⠀⠀⠀⢀⣀⣀⣤⣾⣍⠉⠙⣿⣿⡯⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠸⣿⣿⣿⠉⠀⠀⣀⣨⡟⠛⠛⠒⠒⠤⢄⣀⠀⠙⢿⣆⣷⣧⣾⠟⠁⠀⣀⠤⠄⠒⠚⠛⠛⣯⣀⡀⠀⠉⢹⣿⣿⡿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⡟⠉⣀⡤⢷⡦⠄⠀⠀⠀⠀⠈⠙⠢⣌⣻⣿⣿⢋⠤⠚⠉⠀⠀⠀⠀⠀⠠⣶⠷⣄⡈⠙⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠸⠿⣿⣿⣿⣁⡤⠾⣷⣤⣴⠶⢶⣒⡻⠿⠿⢛⣿⣿⣿⣟⠛⠽⠿⢓⣲⠶⢶⣦⣴⡟⠦⣄⣹⣿⣿⡿⠟⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠛⣿⣿⣿⢛⣉⠥⠒⠉⠁⠀⣀⠔⢈⠔⣽⣿⣿⡝⢌⠒⢄⡀⠀⠉⠑⠢⢍⣙⢻⣿⣿⡟⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠋⠀⠀⠀⢀⡤⠊⠀⡴⠋⣼⡟⣿⡟⢿⡄⠳⡄⠈⠢⣀⠀⠀⠀⠈⢻⣷⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣯⢽⣀⠀⣀⣴⡏⠀⢀⡞⠁⣸⡿⠀⠉⠀⠘⣿⡀⠙⣆⠀⠘⣷⣄⡀⢀⡸⢯⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⣿⣿⡶⠋⡿⠋⣽⠷⣶⡟⠀⢰⣿⠃⠀⠀⠀⠀⢹⣧⠀⠘⣷⡖⢿⡍⠻⡏⠳⣶⣿⡟⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣷⡞⠀⢠⡇⢰⡟⠀⠀⣾⡏⠀⠀⠀⠀⠀⠈⣿⡆⠀⠘⣧⠀⣷⠀⠹⣶⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣶⡟⠙⣿⡀⠀⣰⡿⠀⠀⠀⠀⠀⠀⠀⠸⣷⡀⠀⣹⣟⠙⣷⣾⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⢿⣿⣿⣿⡿⠿⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⠿⠿⣿⣿⣿⣿⠟⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

all $ id

do
  all $ (chop 8).(#pan "[0.25 0.75]/2")
  once $ s "moth:5" # speed "2" # gain (sine*0.5+0.4)
  xfadeIn 4 8 $ loopAt "16" $ chop 2 $ splice 32 "0..31" $ s "mels:3" # speed "[0.5, 0.52]"
    # djf (range 0.33 0.66 $ slow 32 $ sine)
  d1
      $ every 8 (#hpf "200 400 800 1e3")
      $ every 5 (#crush 5)
      $ stack [
        -- brak $ s "[ifdrums](5,8)" # shape "0.6" # speed (iter 3 "0.5 1 0.75") # coarse "3" # gain "0.9",
        s "808:1(7,8)?"  #speed 0.7 #gain 0.95
        ]  |*| speed "[1, 1.02]"


do
  let seed = "<0.35 0.4 0.125>"
  d2
    $ rarely (stut' 6 (0.125) (|* gain 0.8) )
    $ sometimesBy seed (ply 4. (|* gain 0.8))
    $ s "~ <sfe-h*2 lcp(3,8)>"
      # n (irand 16)
      # speed "<1 2>/16"
      # detune (range 1 4 $ slow 8 $ sine)
       # shape (range 0.2 0.35 $ slow 8 $ tri)
      # phasr 1 #phasdp 1  #gain 0.72

d3
$ stack
[

 ]
  #gain 0.72

all$ id

xfadeIn 4 8
$ chop 2
$ striate 2
$ loopAt "16" $ splice 32 "0..31"
$ s "mels:3" # speed "[0.5, 0.52]"


do
  d1
    $ sometimes (fast 2)
    $ rarely (ply "2 4")
    $ s "[jp(3,8,<0 2 1>)?]"
    # n (irand 8)
    # gain 0.9 # nudge 0.21
    # speed "[1, 1.02, 0.98]"
    # lpf (range 1000 10000 $ slow 8 $ saw)
  d3
     -- $ sometimes (modFunc)
     -- $ someCyclesBy 0.1 ( (#accelerate (slow 4 $ range 6 0 $ sine)).(#speed 0.5))--
     $ almostNever (chunk 4 (hurry 2))
     $ sometimes (iter 4)
     $ struct "[1 0 0 1 0 1 ~ <[0] [1]>]*1"
       $ s "dhi c" #legato 0.25
       # gain 1
       # lpf (range 100 1400 $ slow 8 $ saw)


all $ id

xfadeIn 4 8
    $ degradeBy 0.05 -- down then up at end
    -- $ (spin "8")
    $ (# begin (choose [0,0.05..0.25]))
    $ s "mels(<5 3>,8,<0 2 1>)"
    # n (choose [5]) # legato 1.2
    # up "[0,7,14]" # gain 0.9
    |- note "7 -5" # speed "[1, 1.02, 0.98]" -- down at the end



7+12


-- melody down, spin out

do
   -- once $ s "moth" # speed "[-0.5, -0.52]" # gain 0.8
   d2
     $ someCyclesBy 0.1 ( (#accelerate (slow 4 $ range 6 0 $ sine)).(#speed 0.5))
     -- $ ( # fshift (range 10 100 $ slow 16 $ sine))
     $ rarely (ply "2 4")
     $ sometimes (chunk 4 (hurry 2))
     $ stack [
       -- whenmod 7 4 (iter 4 ) $ s "~ sfe-sn"  # n (choose [2,3,6]) # legato 2,
       -- fast 2 $ s "lcp*2" #legato 1  # up (range 24 36$ slow 4 $ sine) # gain 0.78
             -- # shape 0.89  # sus 0.24 # rel 0.34 # lpf 200,
            loopAt 4 $ splice 32 "0..31" $ s "svlng:3" # gain 0.928
       ]
       -- # sus 0.24 # rel 0.24
       # lpf (range 1000 10000 $ slow 8 $ sine)
       # lpq (range 0.1 0.2 $ slow 8 $ sine)

-- wheel samples
 do
    d4
      $ gain "1.3*8"
      # s "<pent:15 pent:16>"
      # sus 0.24 # rel 0.24
      # begin (choose [0,0.02..0.8]) |* gain "0.9"
      |- note "7 -5"


all $ (# crush 4).(#squiz "1 0 2 0")

do
   all $ id
   d2 $ sometimes (chunk 2 (hurry 2) )
     $ s "<sfe-kw:2 dhi>(3,8)"
     # speed "[0.6, 0.62]"
     # gain 1 # shape 0.2

d5 $
-- suggestion?

d1
 -- $ rarely (modify)
 $ loopAt "2"
 $ splice " <8 16>" (iter 8 "[0 [1 3] 2 3 6 [~ 3] 2*2 1]/2")
 $ s "aph:7"
 # speed "[1, 1.02]"
 # gain 0.8




 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⢰⡿⠻⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠁⠀⠈⠻⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⣼⡇⠀⠀⠀⠀⠹⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⢰⣿⡇⠀⠀⠀⠀⠀⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⢸⡟⣿⣦⣀⠀⣀⣼⠁⣿⣿⠀⠲⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⢸⡇⠈⢛⣿⠿⢿⣿⡄⠘⢻⡇⠀⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠘⡇⣴⠋⠀⠀⣀⠈⠙⣄⠈⡇⠀⢰⠀⣀⠤⠐⠶⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠹⣇⢰⣷⣾⠷⢶⣤⡘⣤⠇⠀⠞⠋⠀⠀⣀⣠⣤⣴⣶⣶⣶⣶⣦⣤⣀⡀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣿⣧⣄⡀⠙⣿⣿⣠⡟⢀⡤⠒⠉⠉⠉⠉⠛⣫⠟⠋⠉⠉⠉⠛⠻⢿⣶⣄
 ⠀⠀⠀⢀⣤⣶⣾⣿⣿⠶⠿⠿⢦⣙⣦⣿⣿⣿⣾⣟⣉⡉⠉⠙⠶⣶⣿⡇⠀⠀⠀⠀⠀⠀⢀⣴⡿⠁
 ⠀⢀⣴⣿⣿⣿⣟⣁⣀⣀⣤⠔⢒⣿⣿⣿⣿⠿⣍⡀⠉⠻⣶⡆⠀⠘⣿⣷⣄⠀⠀⠀⣀⣴⠿⠋⠀⠀
 ⢠⡾⠋⠁⠀⢹⣿⡿⠋⣡⣏⠤⠋⣱⡿⢻⡟⡓⢦⣽⣦⣴⣿⣧⠂⢠⡏⠙⠻⢿⣿⣿⠟⠁⠀⠀⠀⠀
 ⣿⣧⣤⣤⣤⣾⡯⠤⠚⠋⠁⠀⢰⠟⠀⡞⢀⡇⠈⢿⡟⠯⣭⣤⣴⣋⣠⡤⠶⠛⠉⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠀⠀⣧⠊⣧⠀⢸⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⣰⣿⣧⣸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⡿⠟⠻⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇⠀⠀⢸⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣄⣠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀


--  transition..
d1 silence

d5 silence

all $ id

do
   d4
     $ gain "1.3*8?"
     # s "<pent:15 pent:16>"
     # sus 0.24 # rel 0.24
     # begin (choose [0,0.02..0.8]) |* gain "0.9"
     |- note "7 -5"

d3
$ sometimes (off 0.125 (|+ note "12"))
 $ note "{fs4 ~ d4 ~  e4 ~  d4 ~ }%1"
 # s "midi2"
 |- note 4
# nudge (0.56)

d2 $ sometimes (chunk 2 (hurry 2) ) $ s "<sfe-kw:2 dhi>(5,8)?"
  # speed "[0.6, 0.62]"
  # gain 1 # shape 0.2


do
  let kickPat = "{1 ~ <~ 1>  <1 ~> ~!2 1 ~!3 1 1 ~!2 1 ~!3 1 1 ~!2 1 ~!5 1 ~!3}%8"
      hPat = "{1!3 ~!3 1 ~!2 1 ~!5 1 ~!2 1 ~ 1 ~ 1 ~!2 1 ~!2 1!2 ~!2  1 ~  }%16"
  once $ s "bsvocals" # n(irand 7) #gain 0.78 # speed "-1"
  all $ id
  d4
    $ rarely (modify)
    $ almostNever (chunk 4 (hurry 2))
    $ stack [
    struct (kickPat) $ s "[sfe-kd:15,sfe-kd:4]"  # shape 0.62  #gain 0.88,
    rarely (ply "2 4 8") $
      stack [
        struct "~ ~ 1 ~ " $ s "sfe-cp:0" #gain 0.8   # speed "[0.8, 0.82]",
        struct (hPat) $ s "incoming:3" #up (choose [0]) # sus 0.09 # rel 0.1 # gain 0.6
        ]
    ]
    |* gain 0.78
    # speed "[1,1.02]"
    -- #hpf 10
    # phasdp (range 0.1 0.2 $ slow 8 $ sine)
    # phaserrate (range 0.1 0.2 $ slow 8 $ sine)


d2 silence


-- variation 1 ..
do
 xfadeIn 1 8
 $ slow "1 2"
 -- $ someCyclesBy 0.15 rev
 -- $ (0.25 <~ )
 -- $ someCyclesBy 0.05 (iter 8)
   $ degradeBy 0.44 -- start 0.4
   $ sometimes (off 0.125 (|+ note "<12>"))
   -- $ rarely (off 0.25 (|+ note "<7 -12>"))
   $ seqPLoop [
   (0,4,
     note  "{<[fs3, fs4] [d3, d4] > cs5 a5 <[fs3, fs4] [d3, d4]> ~ a5 d5 cs5 }%4" ),
   (4,8,
     note  "{[e3, e4] cs5 d5 [e3, e4] cs5 d5 cs5 a4 [d3,d4,a4] cs5 e5 [d3,d4] a4 e5 d5 cs5}%4")
     ]
     # s "midi1"
     |+ note "-4 8"
     # nudge (0.56)


xfadeIn  6 8
  -- $ rarely (modify)
  $ loopAt "8"
  $ splice 32 "0..31" $ s "aph:0"
  # speed "[1, 1.02]"
  # gain 0.882
  # accelerate "-0.2 0.1"


d5 silence



do
  all $ id
  d4
     $ whenmod 24 22 (const $ s "sfe-kd:4*16?" # speed "[1, 1.02]" # shape 0.89 # gain 0.68) -- #orbit 7 # pan 7 # nudge 0.14)
     $ someCyclesBy 0.1 ( (#accelerate (slow 4 $ range 6 0 $ sine)).(#speed 0.5))
     -- $ ( # fshift (range 10 100 $ slow 16 $ sine))
      $ rarely (ply 4) $ sometimes (chunk 4 (hurry 2))
     $ stack [
         whenmod 7 4 (iter 4 ) $ s "~ sfe-sn"  # n (choose [2,3,6]) # legato 2,  -- # orbit 3 # pan 3,
         fast 4 $ s "lcp*2" #legato 1  # up (range 24 36$ slow 4 $ sine) # gain 0.78, -- #orbit 4 # pan 4,
         sometimes (fast "2 1") $ s "sfe-kd:2*4"  # speed "[0.6, 0.62]" # shape 0.52,  -- # orbit 5 # pan 5,
         loopAt 8 $ splice 32 "0..31" $ s "svlng:6" # gain 1.1 -- # orbit 6 # pan 6
         ]
         |*| gain 0.68



   -- variation 2..
 d1
 -- $ slow "1"
 -- $ someCyclesBy 0.15 rev
 -- $ (0.25 <~ )
 -- $ someCyclesBy 0.05 (iter 8)
   $ slow "1"
   $ degradeBy 0.05
   $ seqPLoop [
   (0,4,  sometimes (off 0.125 (|+ note "<12 0 7 -12>"))
     $ note  "{<[fs3, fs4] [d3, d4] > cs5 a5 <[fs3, fs4] [d3, d4]> ~ a5 d5 cs5 }%4" ),
   (4,8,  rarely (off 0.125 (|+ note "<12 0 7 -12>"))
     $ note  "{[e3, e4] cs5 d5 [e3, e4] cs5 d5 cs5 a4 [d3,d4,a4] cs5 e5 [d3,d4] a4 e5 d5 cs5}%4"),
     (8,12,  sometimes (off 0.125 (|+ note "<12 0 7 -12>"))
      $ note  "{[fs3, fs4, cs5] ~ cs6 [fs3, fs4]  ~ d6 cs6 a5 [a3,a4, a5] ~ e6 [a3,a4, a5] ~ e6 d6 cs6}%4" ),
    (12,16,  often (off 0.125 (|+ note "<12 0 7 -12>"))
       $ note  "{[e3, e4,e5] ~ cs6 [e3, e4] ~ cs6  a5 b5 [d3,d4,a4] cs5 e5 [d3,d4] a4 e5 d5 cs5}%4")
   ]
   # s "midi1"
   |+ note "-4 8"
  # nudge (0.56)

 all $ (#hpf "2000 500 1200 400 300 4000")

 all $ (#squiz "1 0 3 0").((#hpf "2000 500 1200 400 300 4000"))


d6
    $ rarely (modify)
    $ loopAt "4"
    $ splice 32 "0..31" $ s "aph:0"
    # speed "[1, 1.02]"
    # gain 0.882


all $ id

 d6
    -- $ rarely (modify)
    $ loopAt "8"
    $ splice 32 "0..31" $ s "aph:1"
    # speed "[1, 1.02]"
    # gain 0.9


d1
  -- $ sometimes (off 0.125 (|+ note "<12>"))
  $ rarely (off 0.25 (|+ note "<7 -12>"))
  $ rarely (degrade)
  $ seqPLoop [
  (0,4,
    note  "{<[fs3, fs4] [d3, d4] > cs5 a5 <[fs3, fs4] [d3, d4]> ~ a5 d5 cs5 }%4" ),
  (4,8,
    note  "{[e3, e4] cs5 d5 [e3, e4] cs5 d5 cs5 a4 [d3,d4,a4] cs5 e5 [d3,d4] a4 e5 d5 cs5}%4")
    ]
    # s "midi1" # nudge 0.56
    |+ note "8 -4"



 do
   d4
     -- $ whenmod 24 22 (const $ s "sfe-kd:4*16?" # speed "[1, 1.02]" # shape 0.89 # gain 0.74) -- #orbit 7 # pan 7 # nudge 0.14)
     $ someCyclesBy 0.1 ( (#accelerate (slow 4 $ range 6 0 $ sine)).(#speed 0.5))
     -- $ ( # fshift (range 10 100 $ slow 16 $ sine))
       $ rarely (ply 4) $ sometimes (chunk 4 (hurry 2))
       $ stack [
         whenmod 7 4 (iter 4 ) $ s "~ sfe-sn"  # n (choose [2,3,6]) # legato 2,  -- # orbit 3 # pan 3,
         -- fast 4 $ s "lcp*2" #legato 1  # up (range 24 36$ slow 4 $ sine) # gain 0.78 -- #orbit 4 # pan 4,
         -- sometimes (fast "2 1") $ s "sfe-kd:2*4"  # speed "[0.6, 0.62]" # shape 0.62 , -- # orbit 5 # pan 5,
         loopAt 8 $ splice 32 "0..31" $ s "svlng:3" # gain 1.1 -- # orbit 6 # pan 6
         ]
         |*| gain 0.7



d3 silence -- bass out


d4 silence -- drums out


d1
-- $ sometimes (off 0.125 (|+ note "<12>"))
-- $ rarely (off 0.25 (|+ note "<7 -12>"))
$ degradeBy  0.2
$ seqPLoop [
(0,4,
  note  "{<[fs3, fs4] [d3, d4] > cs5 a5 <[fs3, fs4] [d3, d4]> ~ a5 d5 cs5 }%4" ),
(4,8,
  note  "{[e3, e4] cs5 d5 [e3, e4] cs5 d5 cs5 a4 [d3,d4,a4] cs5 e5 [d3,d4] a4 e5 d5 cs5}%4")
  ]
  # s "midi1" # nudge 0.56
  |+ note "-4" -- -4 > - 16


xfadeIn 6 8
$ s "< residue gel>(5,8, <0 2 1>)" #  n (irand 32)
# sus (range 0.125 0.8 $ slow 8 $ sine) # rel 0.14
# speed "[1, 1.02]"
# gain 0.78


⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣠⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠛⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠁⠉⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⡾⠀⠈⠳⣄⠀⠀⠀⠀⠀⢀⣴⠟⠁⠀⠘⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⡇⠀⠀⠀⠀⠘⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢠⠇⠀⠀⠀⠈⢧⡀⠀⣠⠴⠊⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⣴⠖⠲⢬⣳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⡾⠀⠀⠀⠀⠀⢉⣷⠚⠁⠀⠀⠀⠀⠀⠀⢸⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⡇⠀⠀⢰⠃⠀⠀⠀⠈⠙⢿⡂⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⢼⠉⡇⠀⠀⠀⠀⠀⠀⢠⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⡾⠀⠀⠀⠀⠀⠀⣰⠟⠦⣀⠀⠀⠀⠀⠀
⠀⡼⠁⠀⠀⠀⠀⠀⠀⠀⠸⡄⢻⡀⠀⠀⠀⠀⢀⠞⠀⢀⣀⠀⠀⠀⠀⠀⠀⣶⡄⠀⠀⠀⠀⢸⠀⠀⡇⠀⠀⠀⠀⣠⠞⠁⠀⠀⠘⡇⠀⠀⠀⠀
⠀⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⢳⣸⡇⠀⠀⠀⣴⣏⡴⠚⠉⠙⠃⠀⠀⠀⣀⡀⠙⠦⣄⠀⠀⠀⠘⡇⢠⡇⠀⠀⢠⠜⠁⠀⢀⣀⣠⣼⣃⣀⡀⠀⠀
⠀⠀⠉⢙⣲⣤⣤⡤⠤⢤⡀⠀⢳⣧⠀⣠⢞⡷⢋⡴⠖⠙⣷⠀⠀⠀⠀⠻⢧⣀⡀⠈⠙⢦⡀⠀⣷⢸⠇⠀⡴⢃⣠⠖⣺⡭⠛⠁⠀⠀⠈⠉⠳⡄
⢠⡶⠊⠉⠀⠀⠀⠈⠉⠙⠃⠀⠈⣿⣶⣱⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠲⢼⣦⣽⢿⢠⣾⢟⣫⠴⠋⠁⠀⠀⠀⠀⠀⠀⠀⠈⡗
⠸⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣟⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣟⣏⣁⣀⣀⣀⡠⠤⠴⢒⣒⣷⠆⠀⢠⠇
⠀⠈⠙⠲⠤⣀⠀⠀⠀⠀⠀⢀⣾⠳⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⢻⡛⢦⡛⠳⠭⣍⣉⠉⠉⠀⠀⢀⣠⠏⠀
⠀⠀⠀⠀⠀⠈⠳⢤⣀⣀⡴⠋⣇⣴⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⡙⢦⠀⠀⠉⠉⠒⠒⠒⠋⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⣼⡖⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢰⠋⠀⠙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠏⠀⠙⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢠⢸⡄⠀⠀⠀⠙⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞⠀⠀⠀⠘⠦⣄⡀⠀⠀⢀⡤⠴⠲⠤⣤⡀⠀⠀⠀⠀
⠀⢸⣸⡇⠀⠀⠀⠀⠈⢧⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⣀⣠⠤⠦⣄⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠹⣤⠞⠉⠀⠀⠀⠀⣾⡇⠀⠀⠀⠀
⠀⢸⡏⠀⠀⠀⠀⠀⠀⠘⡆⠀⢰⡏⣠⠖⠀⠀⣠⠶⠋⠁⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⢀⣼⠋⠀⠀⠀⠀⠀⠀⢿⡀⠀⠀⠀⠀
⠀⠈⢳⠀⠀⠀⠀⠀⠀⠀⢸⡄⢸⣻⠁⠀⣠⠞⠁⠀⠀⠀⢀⡴⠃⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠀⣠⣻⠏⠀⠀⠀⠀⠀⠀⠀⠈⢧⡀⠀⠀⠀
⠀⠀⠈⠳⠤⣀⣀⠀⠀⠀⠀⣧⢸⡇⢀⠜⠁⠀⠀⠀⠀⣰⠋⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠘⣆⠀⠀⣰⣳⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀
⠀⢀⣤⠒⠒⠚⠛⠻⠷⠶⣶⣾⣾⣷⠋⠀⠀⠀⠀⠀⣰⠃⠀⠀⠀⠀⠀⠀⢿⠉⠙⠲⣄⠀⠹⡄⣴⡽⠃⠀⠀⠀⠀⠀⠀⣀⣤⣤⣴⠾⣥⣀⠀⠀
⠀⢿⡅⠀⠀⠀⠀⠀⠀⠀⣼⣿⠏⠓⢶⣦⣀⣀⣀⡼⠁⠀⠀⠀⠀⠀⠀⠀⠈⣞⠉⠙⠲⢿⣶⣷⡿⠁⠀⠀⠀⣠⠴⠚⣉⠤⠞⠉⠀⠀⠀⢸⣧⠀
⠀⠸⢯⠀⠀⠀⠀⠀⢀⡾⢻⣿⠀⠀⠀⠙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠛⣿⢦⣄⡀⠘⠓⠉⠉⠀⠀⠀⠀⠀⠀⠀⣼⠟⠀
⠀⠀⠘⢦⣀⣀⡤⠞⢹⣠⠏⡇⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⡙⠫⢟⡓⠦⠤⣄⣀⠀⠀⠀⢀⠞⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⠀⡇⠀⠀⣀⣤⠖⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠢⢤⣉⣦⠀⠀⠉⠙⠒⠒⠋⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀


do
  let stutter = fast "<1 [4 1 2 1] 1 [1 [4 1]]> 1"
  d4
    $ stack [
      loopAt "4" $ splice 32 "0..31" $ s "lbreak160:6",
      stutter $ s "[[~ ~ ~ ] [~ cp:1*4]]" # speed "1 <1 1.5 2>" # shape 0.6,
      often stutter $ s "bshh*16" # n (irand 2)
          # pan (range 0 1 $ slow 8 $ square)
      ] # gain 0.8

xfadeIn 1 8
      $ loopAt 8
      $ splice 32 "0..31"
      $ s "pig" # gain 0.9

d5
  $ rarely (ply 4) $ chunk 4 (hurry 2)
  $ s "<detritus>*8?" # n (irand 8) # legato 0.8
  # up (randcat [0,3,5,2]) # shape 0.96
  # coarse "2 4 8 12" |* gain "0.6"


do
  let mx = [1, 0]
  d2 $ qtrigger
    $ loopAt 8
    $ splice 16 "0..15"
    $ s "pig:2" # gain 1.1


do
  let mx = [1, 1,0]
  d2
    $ qtrigger
    $ loopAt 8
    $ splice 16 "0..15"
    $ s "pig:3" # gain 1.1
  d3 $ slow 2
    $ s "808bd:1(3,8)" # up "-12"
    |* gain (mx!!2)



do
  let mx = [1, 1,0]
  d2
  -- $ qtrigger
    $ loopAt 16
    $ splice 16 "0..15"
    $ s "pig:4" # gain 1.1
  d3 $ silence
  d4 $ s "hey/4" # n (irand 3)
      |* gain (mx!!1)
  d5 $ silence


xfadeIn 4 8
$ loopAt " 1 2 4 2 "
$ degradeBy 0.4
$ splice "4 2 8" "0..7" $ s "limb"
# gain 0.8

xfadeIn 1 8 $ silence

do
  let mx = [1, 1,0]
  d2 $ qtrigger
    $ loopAt 16
    $ splice 16 "0..15"
    $ s "pig:5" # gain 1.1
  d3 $ silence

d4 $ -- suggestion?


d6 silence

setcps(163/120/2)


d4 silence

-- transition
xfadeIn 2 8
  $ spin 2
  $ loopAt 8
  $ splice 32 "0..31" $ s "gecs"
  # gain 1.1


d1
  $ every 8 (#hpf "200 400 800 1e3")
  $ every 5 (#crush 5)
  $ stack [
    s "808:1(7,8)?"
    # speed 0.8
  ]  |* gain 0.9  |*| speed "[1, 1.02]"



d1
    $ every 8 (#hpf "200 400 800 1e3")
    $ every 5 (#crush 5)
    $ stack [
      -- suggestion
      s "808:1*4"  #speed 0.7
    ]
    |* gain 0.8 |*| speed "[1, 1.02]"


d1
    $ every 8 (#hpf "200 400 800 1e3")
    $ every 5 (#crush 5)
    $ stack [
      brak $ s "[sfe-kd:1](5,8)" # shape "0.6" # speed (iter 3 "0.5 1 0.75") # coarse "3" # gain "0.9",
       -- s " ~ [sfe-kw:7(3,8)?, sfe-fx] ~ k*2" #ctf (range 250 300 $ slow 8 $ sine) #shape 0.6,
       -- add ?
      s "808:1(7,8)?"  #speed 0.7 #gain 0.95
    ] |* gain 0.8 |*| speed "[1, 1.02]"


xfadeIn 3 8
    $ loopAt 8
    $ splice 32 "0..31"
    $ s "gecs:1"
    # gain 1


xfadeIn 2 8 -- gecs bass
    $ loopAt 8
    $ splice 32 "0..31" $ s "gecs:6"
    # gain 1


d1 $ stack [
    every 4 (chunk 2 (hurry 2))
    $  every 5 (0.25 <~)
    $ every 8 (jux (#speed "-1") )
    $ s "bk:4*4" # gain 0.95
    ]

d4
    $ chunk 4 (chop 2.(#speed "0.5").(hurry 2))
    $ begin (off 0.125 (+0.1) $ "0.1 0.1 [~ 0.2] 0.5")
    # sound "<gecs:3 gecs:4>" # sustain 0.2
    -- # accelerate "0.2 -0.5"
    #gain 0.91

  xfadeIn 3 8
      $ spin 2
      $ loopAt 16
      $ slice 32 (iter 8 $ "{8*2 23 12 18 28 3 7 ~ 22}%4")
      $ s "gecs:2"
      # gain 1

  xfadeIn 4 8
          $ spin 2
          $ loopAt 8
          $ splice 32 "0..31"
          $ slice 32 (iter 8 $ "{8*2 23 12 18 28 3 7 ~ 22}%4")
          $ s "gecs:5"
          # gain 1

do
  let mx = [1, 1]
      djfVal = 0.5
  d1
    -- $ whenmod 8 7 (const $ note "{~!3 e4 gs5 [~ cs6] a4 cs5}%8" # s "ser:2")
    $ someCyclesBy 0.25 (spreadf [chop 8, rev, (#crush " 4  5 6")])
    $ stack [
        gain (iter "1 4" "{~ ~  1 ~  ~ ~ 1 [~ 1] }%8") # s "sfe-sn:2" # distort 0.2,
        s "~ sfe-cp:12 ~ sfe-cp:12",
        gain (iter 8 "{1 ~ 1 ~!3 1 ~!3 1!3  ~ 1 ~ 1 ~ 1!3 ~ 1  ~!3 1 ~!2 1 ~ 1 }%16" )
          # s "909v2:1" # speed 0.5 # legato 1
        ]
         |* gain (mx!!0*0.7)

d2
  -- $ whenmod 8 7 (const $ silence)
  $ someCyclesBy 0.75 (spreadf [chop 8, rev, (#crush " 4  5 6")])
  $ stack [
  loopAt 4 $ splice 32 "0..31" $ s "lbreak160:3"  #djf (djfVal )
  ]
  |* gain (mx!!1*0.8)


⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣾⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢶⣶⡶⡴⢦⣼⣟⣻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⡳⣋⡿⣦⡲⣺⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠸⣼⣸⠟⠀⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣽⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣦⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣷⣿⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣴⣿⢿⢯⣯⡀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣿⣟⢎⣾⢻⡆⠀⠀⠀⠀⠀⠀⠀⢀⡼⢻⢛⣏⣯⢽⡿⡿⣻⡻⣤⡀
⠀⠀⠀⠀⠀⠀⠀⣾⣿⣶⣆⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠃⣕⠙⢧⣽⢸⣯⠀⡀⠀⠀⠀⠀⠀⠘⢯⣡⣂⣹⣎⡾⠀⠑⠛⠛⠉⠁
⠀⠀⠀⠀⠀⠀⠀⠹⣷⣾⡟⣿⠻⢦⣠⠄⠀⡄⢀⣠⣴⣶⣹⣿⣿⢧⣦⣽⣿⣿⣺⠣⣄⣀⡀⠀⠀⠀⠐⣻⡿⡿⣿⢧⡆⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣗⡒⠷⢦⣝⣶⣾⣟⡭⢶⣋⣲⡿⡿⠏⡿⢻⠿⠇⢹⣎⠻⡻⣳⢿⣷⣄⠀⢸⣃⢼⡐⣇⡷⢯⣆⠀⠀⠀⠀
⠀⣴⣦⣄⡀⠀⠀⠀⢈⣿⠿⢷⠶⠾⠿⣿⡿⠿⣥⣬⣭⣿⣷⠇⠀⠁⡼⠆⡰⣸⠿⣦⣷⣿⡺⠿⠿⠂⠘⠻⢾⡵⣿⡷⣞⣿⡄⠀⠀⠀
⠀⣷⡿⣿⣿⣤⠀⠀⢨⣯⢘⠆⡖⡪⣻⣿⣻⡂⢄⣑⢆⣻⡇⠀⠀⠀⠻⣷⣧⣯⠾⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠃⠀⠀⠀
⠀⡿⣿⣿⠻⣿⣷⡀⠀⠛⢷⣮⣼⠞⠋⡟⠸⣒⡈⢢⣱⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣿⣿⠯⣍⣳⡈⢷⡀⠆⠀⠉⠁⠀⠀⠀⠀⠙⠛⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣰⣾⠻⠷⣶⣭⣹⣤⢗⣮⡰⣃⣤⣤⣤⣤⣤⢤⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⠅⣾⢉⣁⣈⣙⣻⣿⣿⣟⡶⠲⢶⡛⢭⣿⣟⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣮⣥⠊⢡⡔⣮⣿⣿⣧⠉⢻⣷⣦⡍⣿⣿⣷⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⠻⣷⣮⠷⠛⢹⠏⣷⡌⢢⣀⣫⢝⣿⠿⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠋⠀⣹⣡⠈⡎⢫⣲⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⣲⣿⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

all $ id

do
  resetCycles
  xfadeIn 1 8
    $ loopAt 96 $ splice 1024 "0..1023"
    $ s "new:2"
    # legato 96

d6 silence

do
  d2 silence
  d3 silence
  d4 silence
  d5 silence


do
  -- measure and de-reverb drums
  -- once $ ccv 1 # ccn 9 # s "midi6"
  let mx = [1,0]
  d5 $ note "{as5 ~!5 ds5 cs6 as5 ~!3 fs5 ~!3 [fs5, b4] ~!7 b4 gs5 fs5 ~ as5 ~ fs5 ~}%8"
    #  s "midi3"
    |- note 12
    d2 $ loopAt 16
    $ splice 128 "0..127" $ s "aph:3"
    |* gain (mx!!1)

once $ s "moth2:2" 
    #speed "[1, 1.02]" # gain 0.8 -- clang

--lower octave
do
  d5 $ note "{as5 ~!5 ds5 cs6 as5 ~!3 fs5 ~!3 [fs5, b4] ~!7 b4 gs5 fs5 ~ as5 ~ fs5 ~}%8"
    # s "midi3"
    |- note 12


-- faded drums
do
let mx = [1,0]
d2  $ struct "<1(3,8) [{1 ~!5 1 1}%8] 1(3,8) 1(3,8) [{1 ~!5 1 1}%8]>"
  $ s "k"
  # lpf 200
  -- # nudge (0.21)
  |* gain (mx!!1)

--change midi sound
do
  d5 $ note "{as5 ~!5 ds5 cs6 as5 ~!3 fs5 ~!3 [fs5, b4] ~!7 b4 gs5 fs5 ~ as5 ~ fs5 ~}%8"
    #  s "midi5"
    |- note 12

do
  let mx = [1,0] -- remove  faded drums, add crazy drums
  d2 $ loopAt 16
    $ splice 128 "0..127"
    $ s "<aph:5 aph:6>"
    -- # nudge (0.21)
    # djf (range 0.25 0.75 $ slow 8 $ sine)
    |* gain (mx!!1)

do
  d2 $ silence
  d5 $ silence


-- drum pattern 1
do
  -- measure and revert drums
  once $ ccv 1 # ccn 9 # s "midi6"
  let mx = [1,0]
  d5 $ note "{as5 ~!5 ds5 cs6 as5 ~!3 fs5 ~!3 [fs5, b4] ~!7 b4 gs5 fs5 ~ as5 ~ fs5 ~}%8"
    #  s "midi3"
    |- note 12
  d2 $ loopAt 16
    $ splice 128 "0..127" $ s "aph:3"
    -- # nudge (0.21)
    |* gain (mx!!1)


-- suggestion?

⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢰⡿⠻⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣿⠁⠀⠈⠻⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣼⡇⠀⠀⠀⠀⠹⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢰⣿⡇⠀⠀⠀⠀⠀⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⡟⣿⣦⣀⠀⣀⣼⠁⣿⣿⠀⠲⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠂
⠀⠀⠀⠀⠀⠀⢸⡇⠈⢛⣿⠿⢿⣿⡄⠘⢻⡇⠀⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠁⠀
⠀⠀⠀⠀⠀⠀⠘⡇⣴⠋⠀⠀⣀⠈⠙⣄⠈⡇⠀⢰⠀⣀⠤⠐⠶⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁
⠀⠀⠀⠀⠀⠀⠀⠹⣇⢰⣷⣾⠷⢶⣤⡘⣤⠇⠀⠞⠋⠀⠀⣀⣨⣤⣴⣶⣶⣶⣶⣦⣤⣀⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣿⣧⣄⡀⠙⣿⣿⣠⡟⢀⡤⠒⠉⠉⠉⠉⠛⣫⠟⠋⠉⠉⠉⠛⠻⢿⣶⣄
⠀⠀⠀⢀⣤⣶⣾⣿⣿⠶⠿⠿⢦⣙⣦⣿⣿⣿⣾⣟⣉⡉⠉⠙⠶⣶⣿⡇⠀⠀⠀⠀⠀⠀⢐⣴⡿⠁
⠀⢀⣴⣿⣿⣿⣟⣁⣀⣀⣤⠔⢒⣿⣿⣿⣿⠿⣍⡀⠉⠻⣶⡆⠀⠘⣿⣷⣄⠀⠀⠀⣂⣴⠿⠋⠀⠀
⢠⡾⠋⠁⠀⢹⣿⡿⠋⣡⣏⠤⠋⣱⡿⢻⡟⡓⢦⣽⣦⣴⣿⣧⠂⢠⡏⠙⠻⢿⣿⣿⠟⠁⠀⡉⠀⠀
⣿⣧⣤⣤⣤⣾⡯⠤⠚⠋⠁⠀⢰⠟⠀⡞⢀⡇⠈⢿⡟⠯⣭⣤⣴⣋⣠⡤⠶⠛⠉⠀⠀⠀⠈⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠀⠀⣧⠊⣧⠀⢸⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠂⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⣰⣿⣧⣸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⡿⠟⠻⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇⠀⠀⢸⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠀⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣄⣠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

setcps(177/120/2)


do
  -- resetCycles
  d4 $ silence
  d12 $ silence
  xfadeIn 1 12
    $ loopAt 96
    $ splice 1024 "0..1023" $ s "new:0"
    # legato 96
    -- # nudge (0.21)

-- clap pattern

do
  let mx = [1,0]
  d2 $ s "{ ~ ~ <lcp [lcp [~ lcp]] [lcp [~ lcp]] cp>~}%4"
    # gain (mx!!1)


-- drum pattern 1 + choppy vox

do
  let mx = [1, 0]
  d2 $ stack[
      s "{ ~ ~ <lcp [lcp [~ lcp]] [lcp [~ lcp]] cp>~}%4",
      struct "{1 ~!2 1 ~!2 1 ~!4 1 ~!4 1 ~!2 1 ~!2 1 ~ 1 ~!5 1~ }%8"
        $ s "k" # shape 0.5
      ]
      # djf (range 0.25 0.75 $ slow 8 $ sine)
    # gain (mx!!1)
  d3 $ loopAt 16 $ sometimes (chop 2) $ splice 8 "0 1 2*2 5 ~ 7 8"
      $ s "vox-ebmin:1"#legato 16
    # gain (mx!!1)


-- heavy bass
d4 $ note "{ds4 ~!4 [~ cs4] cs4 cs4 b3 [~ b3] ~ b3 [~ cs4] cs4 cs4 ~}%4"
  # s "midi5"

do
  let mx = [1, 0]
  d3
      $ whenmod 24 20 (|* speed "<1 2>")
      $ loopAt 16 $ often (chop 2)
      $ splice 8 "0 1 2*2 5 ~ 7 8*4"
        $ s "vox-ebmin:1"#legato 16
        # gain (mx!!1)

-- sweep/ call+response
do
  d3 $ silence
  d4 $ stack [
      note "{e4 as4 as5 fs6 f6 ~ d6 ~!9}%8" # s "midi5",
      note "{~!9 as5 gs5 [fs5 [fs5,fs6]] }%8" # s "midi3"
    ]


setcps (167/120/2)

isPrime 173

-- take what u want
do
  let mx =[1,0]
  d3 $ loopAt 16 $ splice 8 "0 1 2*2 5 ~ 7 8*4"
        $ s "vox-ebmin:2"#legato 16
      # gain (mx!!1)


--drums and vocal refrain
do
  let mx = [1, 0]
  d2 $ stack[
      s "{ ~ ~ <lcp [lcp [~ lcp]] [lcp [~ lcp]] cp>~}%4",
      struct "{1 ~!2 1 ~!2 1 ~!4 1 ~!4 1 ~!2 1 ~!2 1 ~ 1 ~!5 1~ }%8"
        $ s "k" # shape 0.5
      ]
    # gain (mx!!1)
  d3 $ loopAt 16 $ splice 8 "0 1 2*2 5 ~ 7 8"
      $ s "vox-ebmin:1"#legato 16
    # gain (mx!!1)


xfadeIn 1 8 -- skip this.. to eiffel
  $ loopAt 96
  $ splice 1024 "0..1023" $ s "new:0"
  # legato 96
  # gain 0
  -- # nudge (0.21)





⠐⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡆
⠀⠹⣟⠋⠙⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⠞⠋⢛⡿⠁
⠀⠀⣌⢫⠉⠸⡝⢿⠲⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠔⣻⠇⠞⠉⣹⢋⡄⠀
⠀⢠⢸⣾⡵⢶⣦⣀⠳⣄⢾⡓⡆⠀⠀⠀⠀⠀⠀⠀⠀⢀⠖⣿⢀⡜⠁⣴⣶⢮⣿⡟⠀⠀
⠀⠀⢣⡙⠛⠀⠘⠿⠑⢮⣿⣷⡙⢆⠶⡄⠀⠀⢀⡴⢦⠎⣹⡷⣿⡼⠙⠏⠀⠚⢛⡵⠇⠀
⠀⠀⠀⠹⠖⣦⡶⡄⠀⠀⠈⠓⣻⣌⢇⢸⠀⠀⡞⢰⣋⣞⠛⠋⠀⠀⢀⡴⣦⠖⠟⠁⠀⠀
⠀⠀⠀⠀⣤⡿⢷⣾⣦⡄⠀⠰⣟⣙⣿⣆⢧⢠⢧⣿⣟⣹⡶⠀⢠⣴⢟⡾⣿⣥⠀⠀⠀⠀
⠀⠀⠀⠀⡀⣶⣶⢨⠉⠛⢟⣀⡴⠞⡦⠅⢸⣿⠈⢬⠛⠧⣄⣘⠛⠉⠉⢰⣷⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠉⣯⡴⢤⣢⠏⣡⣤⢾⡇⡀⠈⣏⢠⡘⢗⢦⣄⡉⣶⣦⣼⣨⡏⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠉⠀⢰⣿⡟⢡⡿⡾⣯⠈⠿⠈⡿⡼⣆⠙⣿⣦⠀⠈⠁⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⣤⡾⢻⣷⡟⣹⢿⠇⠀⠀⠀⢏⢧⢹⣷⣿⢿⣄⡄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠟⢱⡟⠉⠀⠀⠀⠀⠘⠹⣧⠙⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣿⡤⡿⠁⠀⠀⠀⠀⠀⠀⠀⠹⡦⣺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⠀⠀⠀⠀⠀⠀⠀⠀
